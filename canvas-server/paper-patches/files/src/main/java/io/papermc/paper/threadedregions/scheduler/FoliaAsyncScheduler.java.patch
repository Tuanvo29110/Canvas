--- a/src/main/java/io/papermc/paper/threadedregions/scheduler/FoliaAsyncScheduler.java
+++ b/src/main/java/io/papermc/paper/threadedregions/scheduler/FoliaAsyncScheduler.java
@@ -26,6 +_,15 @@
 
     private final Executor executors = new ThreadPoolExecutor(Math.max(4, Runtime.getRuntime().availableProcessors() / 2), Integer.MAX_VALUE,
         30L, TimeUnit.SECONDS, new SynchronousQueue<>(),
+        // Canvas start - virtual threads
+        io.canvasmc.canvas.Config.INSTANCE.virtualThreads.asyncScheduler ? io.canvasmc.canvas.util.virtual.VirtualThreadUtils.buildFactory(virtual -> {
+            AtomicInteger idGenerator = new AtomicInteger();
+            virtual.name("Folia Async Scheduler Thread #" + idGenerator.getAndIncrement());
+            virtual.uncaughtExceptionHandler((final Thread thread, final Throwable thr) -> {
+                LOGGER.error("Uncaught exception in thread: {}", thread.getName(), thr);
+            });
+        }) :
+        // Canvas end - virtual threads
         new ThreadFactory() {
             private final AtomicInteger idGenerator = new AtomicInteger();
 
