--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -200,7 +_,7 @@
 
     private CompoundTag getData() {
         // This method does not use the problem reporter
-        return this.storage.load(this.profile.getName(), this.profile.getId().toString(), ProblemReporter.DISCARDING).orElse(null);
+        return this.storage.load(this.profile.getName(), this.profile.getId().toString(), this.profile.getId(), ProblemReporter.DISCARDING).orElse(null); // Canvas - async playerdata saving
     }
 
     private CompoundTag getBukkitData() {
@@ -750,16 +_,7 @@
      * @param compoundTag
      */
     private void save(CompoundTag compoundTag) {
-        File playerDir = server.console.playerDataStorage.getPlayerDir();
-        try {
-            File tempFile = File.createTempFile(this.getUniqueId()+"-", ".dat", playerDir);
-            net.minecraft.nbt.NbtIo.writeCompressed(compoundTag, tempFile.toPath());
-            File playerDataFile = new File(playerDir, this.getUniqueId()+".dat");
-            File playerDataFileOld = new File(playerDir, this.getUniqueId()+".dat_old");
-            net.minecraft.Util.safeReplaceFile(playerDataFile.toPath(), tempFile.toPath(), playerDataFileOld.toPath());
-        } catch (java.io.IOException e) {
-            e.printStackTrace();
-        }
+        server.console.playerDataStorage.save(this.getName(), this.getUniqueId(), this.getUniqueId().toString(), compoundTag); // Canvas - async playerdata saving
     }
     // Purpur end - OfflinePlayer API
 }
