From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Fri, 4 Jul 2025 11:30:11 -0700
Subject: [PATCH] Rebrand


diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index 90a5178b5025378197b69514d782de5d6090cb6b..2c8cfcd75b3ed3afc1497fa75277d2f9c5d87b07 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -593,7 +593,7 @@ public class Metrics {
             boolean logFailedRequests = config.getBoolean("logFailedRequests", false);
             // Only start Metrics, if it's enabled in the config
             if (config.getBoolean("enabled", true)) {
-                Metrics metrics = new Metrics("Folia", serverUUID, logFailedRequests, Bukkit.getLogger()); // Folia - we have our own bstats page
+                Metrics metrics = new Metrics("Canvas", serverUUID, logFailedRequests, Bukkit.getLogger()); // Folia - we have our own bstats page // Canvas - Rebrand
 
                 metrics.addCustomChart(new Metrics.SimplePie("minecraft_version", () -> {
                     String minecraftVersion = Bukkit.getVersion();
@@ -607,11 +607,11 @@ public class Metrics {
                 final String implVersion = org.bukkit.craftbukkit.Main.class.getPackage().getImplementationVersion();
                 if (implVersion != null) {
                     final String buildOrHash = implVersion.substring(implVersion.lastIndexOf('-') + 1);
-                    paperVersion = "git-Folia-%s-%s".formatted(Bukkit.getServer().getMinecraftVersion(), buildOrHash); // Folia - we have our own bstats page
+                    paperVersion = "git-Canvas-%s-%s".formatted(Bukkit.getServer().getMinecraftVersion(), buildOrHash); // Folia - we have our own bstats page // Canvas - Rebrand
                 } else {
                     paperVersion = "unknown";
                 }
-                metrics.addCustomChart(new Metrics.SimplePie("folia_version", () -> paperVersion)); // Folia - we have our own bstats page
+                metrics.addCustomChart(new Metrics.SimplePie("canvas", () -> paperVersion)); // Folia - we have our own bstats page // Canvas - Rebrand
 
                 metrics.addCustomChart(new Metrics.DrilldownPie("java_version", () -> {
                     Map<String, Map<String, Integer>> map = new HashMap<>();
diff --git a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
index 1783f9ea48154dcc8971fc5ef088f5a8c0f0b2ff..69f7e4f964548c224db14be2ad26fafee4932331 100644
--- a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
+++ b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
@@ -35,7 +35,7 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static final Logger LOGGER = LogUtils.getClassLogger();
     private static final int DISTANCE_ERROR = -1;
     private static final int DISTANCE_UNKNOWN = -2;
-    private static final String DOWNLOAD_PAGE = "https://papermc.io/downloads/paper";
+    private static final String DOWNLOAD_PAGE = "https://canvasmc.io/downloads"; // Canvas - Rebrand
 
     @Override
     public long getCacheTime() {
@@ -49,7 +49,7 @@ public class PaperVersionFetcher implements VersionFetcher {
         if (build.buildNumber().isEmpty() && build.gitCommit().isEmpty()) {
             updateMessage = text("You are running a development version without access to version information", color(0xFF5300));
         } else {
-            updateMessage = getUpdateStatusMessage("PaperMC/Folia", build); // Folia
+            updateMessage = getUpdateStatusMessage("CraftCanvasMC/Canvas", build); // Folia // Canvas - Rebrand
         }
         final @Nullable Component history = this.getHistory();
 
@@ -63,14 +63,11 @@ public class PaperVersionFetcher implements VersionFetcher {
         if (buildNumber.isPresent()) {
             distance = fetchDistanceFromSiteApi(build, buildNumber.getAsInt());
         } else {
-            final Optional<String> gitBranch = build.gitBranch();
-            final Optional<String> gitCommit = build.gitCommit();
-            if (gitBranch.isPresent() && gitCommit.isPresent()) {
-                distance = fetchDistanceFromGitHub(repo, gitBranch.get(), gitCommit.get());
-            }
+            distance = -10; // Canvas - Rebrand
         }
 
         return switch (distance) {
+            case -10 -> text("* You are running a development/local version", NamedTextColor.RED); // Canvas - Rebrand
             case DISTANCE_ERROR -> text("Error obtaining version information", NamedTextColor.YELLOW);
             case 0 -> text("You are running the latest version", NamedTextColor.GREEN);
             case DISTANCE_UNKNOWN -> text("Unknown version", NamedTextColor.YELLOW);
@@ -85,19 +82,15 @@ public class PaperVersionFetcher implements VersionFetcher {
 
     private static int fetchDistanceFromSiteApi(final ServerBuildInfo build, final int jenkinsBuild) {
         try {
-            try (final BufferedReader reader = Resources.asCharSource(
-                URI.create("https://api.papermc.io/v2/projects/folia/versions/" + build.minecraftVersionId()).toURL(), // Folia
-                StandardCharsets.UTF_8
-            ).openBufferedStream()) {
-                final JsonObject json = new Gson().fromJson(reader, JsonObject.class);
-                final JsonArray builds = json.getAsJsonArray("builds");
-                final int latest = StreamSupport.stream(builds.spliterator(), false)
-                    .mapToInt(JsonElement::getAsInt)
-                    .max()
-                    .orElseThrow();
-                return latest - jenkinsBuild;
-            } catch (final JsonSyntaxException ex) {
-                LOGGER.error("Error parsing json from Paper's downloads API", ex);
+            // Canvas start - Rebrand
+            final String jenkinsApiUrl = "https://jenkins.canvasmc.io/job/Canvas/lastSuccessfulBuild/api/json";
+            try (final BufferedReader reader = Resources.asCharSource(URI.create(jenkinsApiUrl).toURL(), StandardCharsets.UTF_8).openBufferedStream()) {
+                final JsonObject jsonObject = new Gson().fromJson(reader, JsonObject.class);
+                final int latestBuild = jsonObject.getAsJsonPrimitive("number").getAsInt();
+                return latestBuild - jenkinsBuild;
+            } catch (JsonSyntaxException throwable) {
+                LOGGER.error("Error parsing version information from CanvasMC's Jenkins API", throwable);
+            // Canvas end
                 return DISTANCE_ERROR;
             }
         } catch (final IOException e) {
diff --git a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
index 10a0be7a4db1a51579d113d279af7a9effe7f438..36228bd8845780f919cc08a4cc99f74eb1a61e3a 100644
--- a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
+++ b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
@@ -42,9 +42,9 @@ public record ServerBuildInfoImpl(
         this(
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_ID)
                 .map(Key::key)
-                .orElse(Key.key("papermc", "folia")), // Folia
+                .orElse(Key.key("canvasmc", "canvas")), // Folia // Canvas - Rebrand
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_NAME)
-                .orElse("Folia"), // Folia
+                .orElse("Canvas"), // Folia // Canvas - Rebrand
             SharedConstants.getCurrentVersion().id(),
             SharedConstants.getCurrentVersion().name(),
             getManifestAttribute(manifest, ATTRIBUTE_BUILD_NUMBER)
@@ -61,7 +61,7 @@ public record ServerBuildInfoImpl(
 
     @Override
     public boolean isBrandCompatible(final @NotNull Key brandId) {
-        return brandId.equals(this.brandId);
+        return brandId.equals(this.brandId) || brandId.equals(BRAND_PAPER_ID) || brandId.equals(BRAND_FOLIA_ID); // Canvas - Rebrand
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index e9b6ca3aa25e140467ae866d572483050ea3fa0e..c8a974fcd67f55fe6b60e86e9b2e8a2bb0696b0c 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/dev.folia/folia-api/pom.properties"); // Folia
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/io.canvasmc.canvas/canvas-api/pom.properties"); // Folia // Canvas - Rebrand
         Properties properties = new Properties();
 
         if (stream != null) {
diff --git a/src/main/resources/log4j2.xml b/src/main/resources/log4j2.xml
index d2a75850af9c6ad2aca66a5f994f1b587d73eac4..15fa587d4dd71c0e942e4a009b51f3ecaeb60948 100644
--- a/src/main/resources/log4j2.xml
+++ b/src/main/resources/log4j2.xml
@@ -10,7 +10,7 @@
                     <!-- Log root, Minecraft, Mojang and Bukkit loggers without prefix -->
                     <!-- Disable prefix for various plugins that bypass the plugin logger -->
                     <PatternMatch key=",net.minecraft.,Minecraft,com.mojang.,com.sk89q.,ru.tehkode.,Minecraft.AWE"
-                                  pattern="%highlightError{[%d{HH:mm:ss} %level]: %msg%n%xEx{full}}" />
+                                  pattern="%highlightError{[%d{HH:mm:ss}] [%level]: %msg%n%xEx{full}}" /> <!--Canvas - cleaner logging formats-->
                 </LoggerNamePatternSelector>
             </PatternLayout>
         </TerminalConsole>
