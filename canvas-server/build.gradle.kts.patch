--- a/folia-server/build.gradle.kts
+++ b/folia-server/build.gradle.kts
@@ -10,7 +_,7 @@
     `java-library`
     `maven-publish`
     idea
-    id("io.papermc.paperweight.core")
+    id("io.canvasmc.weaver.core")
     id("io.papermc.fill.gradle") version "1.0.7"
 }
 
@@ -27,6 +_,7 @@
     gitFilePatches = false
     
     val fork = forks.register("folia") {
+        rootDirectory = upstreamsDirectory().map { it.dir("folia") }
         upstream.patchDir("paperServer") {
             upstreamPath = "paper-server"
             excludes = setOf("src/minecraft", "patches", "build.gradle.kts")
@@ -35,7 +_,23 @@
         }
     }
 
-    activeFork = fork
+    val canvas = forks.register("canvas") {
+        forks = fork
+        upstream.patchRepo("paperServer") {
+            upstreamRepo = fork.patchedRepo("paperServer")
+            patchesDir = rootDirectory.dir("canvas-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+
+        upstream.patchDir("foliaServer") {
+            upstreamPath = "folia-server"
+            excludes = setOf("src/minecraft", "paper-patches", "minecraft-patches", "build.gradle.kts", "build.gradle.kts.patch")
+            patchesDir = rootDirectory.dir("canvas-server/folia-patches")
+            outputDir = rootDirectory.dir("folia-server")
+        }
+    }
+
+    activeFork = canvas
 
 
     spigot {
@@ -73,7 +_,7 @@
 }
 val services = objects.newInstance<Services>()
 
-if (project.providers.gradleProperty("publishDevBundle").isPresent) {
+if (true) {
     val devBundleComponent = services.softwareComponentFactory.adhoc("devBundle")
     components.add(devBundleComponent)
 
@@ -123,10 +_,14 @@
     main {
         java { srcDir("../paper-server/src/main/java"); srcDir("../paper-server/src/generated/java") }
         resources { srcDir("../paper-server/src/main/resources") }
+        java { srcDir("../folia-server/src/main/java") }
+        resources { srcDir("../folia-server/src/main/resources") }
     }
     test {
         java { srcDir("../paper-server/src/test/java") }
         resources { srcDir("../paper-server/src/test/resources") }
+        java { srcDir("../folia-server/src/test/java") }
+        resources { srcDir("../folia-server/src/test/resources") }
     }
 }
 val log4jPlugins = sourceSets.create("log4jPlugins") {
@@ -153,7 +_,7 @@
 }
 
 dependencies {
-    implementation(project(":folia-api"))
+    implementation(projects.canvasApi)
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
     implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
     implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
@@ -175,7 +_,7 @@
     implementation("com.velocitypowered:velocity-native:3.4.0-SNAPSHOT") {
         isTransitive = false
     }
-    implementation("io.netty:netty-codec-haproxy:4.1.118.Final") // Add support for proxy protocol
+    implementation("io.netty:netty-codec-haproxy:4.1.123.Final") // Add support for proxy protocol // bump depend
     implementation("org.apache.logging.log4j:log4j-iostreams:2.24.1")
     implementation("org.ow2.asm:asm-commons:9.8")
     implementation("org.spongepowered:configurate-yaml:4.2.0-20250225.064233-199")
@@ -225,14 +_,14 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Folia",
+            "Implementation-Title" to "Canvas",
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Folia",
+            "Specification-Title" to "Canvas",
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Paper Team",
-            "Brand-Id" to "papermc:folia",
-            "Brand-Name" to "Folia",
+            "Specification-Vendor" to "Canvas Team",
+            "Brand-Id" to "canvasmc:canvas",
+            "Brand-Name" to "Canvas",
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
@@ -329,12 +_,11 @@
         .asFile
     javaLauncher.set(project.javaToolchains.launcherFor {
         languageVersion.set(JavaLanguageVersion.of(21))
-        vendor.set(JvmVendorSpec.JETBRAINS)
+        vendor.set(JvmVendorSpec.GRAAL_VM)
     })
-    jvmArgs("-XX:+AllowEnhancedClassRedefinition")
 
-    if (rootProject.childProjects["test-plugin"] != null) {
-        val testPluginJar = rootProject.project(":test-plugin").tasks.jar.flatMap { it.archiveFile }
+    if (rootProject.childProjects["canvas-test-plugin"] != null) {
+        val testPluginJar = rootProject.project(":canvas-test-plugin").tasks.jar.flatMap { it.archiveFile }
         inputs.file(testPluginJar)
         args("-add-plugin=${testPluginJar.get().asFile.absolutePath}")
     }
