From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Sat, 5 Jul 2025 00:56:54 -0700
Subject: [PATCH] Support Spark Profiler


diff --git a/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java b/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java
index cb75568c79380f4c38fe3b4a15da2df6342a8e27..55397d19f716932c0272ce246cc138edc04d2e08 100644
--- a/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java
@@ -383,8 +383,12 @@ public final class RegionizedPlayerChunkLoader {
             final int centerZ = PlayerChunkLoaderData.this.lastChunkZ;
 
             return Integer.compare(
-                Math.abs(c1x - centerX) + Math.abs(c1z - centerZ),
-                Math.abs(c2x - centerX) + Math.abs(c2z - centerZ)
+                // Canvas start - use Euclidean distance squared
+                io.canvasmc.canvas.Config.INSTANCE.chunks.useEuclideanDistanceSquared ?
+                    (c1x - centerX) * (c1x - centerX) + (c1z - centerZ) * (c1z - centerZ) : Math.abs(c1x - centerX) + Math.abs(c1z - centerZ),
+                io.canvasmc.canvas.Config.INSTANCE.chunks.useEuclideanDistanceSquared ?
+                    (c2x - centerX) * (c2x - centerX) + (c2z - centerZ) * (c2z - centerZ) : Math.abs(c2x - centerX) + Math.abs(c2z - centerZ)
+                // Canvas end
             );
         };
         private final LongHeapPriorityQueue sendQueue = new LongHeapPriorityQueue(CLOSEST_MANHATTAN_DIST);
diff --git a/io/papermc/paper/threadedregions/RegionizedServer.java b/io/papermc/paper/threadedregions/RegionizedServer.java
index dc7f6ab214732b27421df64ec36a0ebc141100dc..50eca8535a4e961c342cf5ec0c6047371b5671f8 100644
--- a/io/papermc/paper/threadedregions/RegionizedServer.java
+++ b/io/papermc/paper/threadedregions/RegionizedServer.java
@@ -321,6 +321,8 @@ public final class RegionizedServer {
         ++this.tickCount;
         // expire invalid click command callbacks
         io.papermc.paper.adventure.providers.ClickCallbackProviderImpl.CALLBACK_MANAGER.handleQueue((int)this.tickCount);
+        long startTime = System.nanoTime(); // Canvas - support spark
+        MinecraftServer.getServer().server.spark.tickStart(); // Paper - spark // Canvas - support spark
 
         // scheduler
         ((FoliaGlobalRegionScheduler)Bukkit.getGlobalRegionScheduler()).tick();
@@ -346,6 +348,8 @@ public final class RegionizedServer {
 
         // player list
         MinecraftServer.getServer().getPlayerList().tick();
+        long endTime = System.nanoTime(); // Canvas - support spark
+        MinecraftServer.getServer().server.spark.tickEnd(((double)(endTime - startTime) / 1000000D)); // Paper - spark // Folia - region threading // Canvas - support spark
     }
 
     private void tickPlayerSample() {
@@ -485,4 +489,4 @@ public final class RegionizedServer {
     public static final record WorldLevelData(ServerLevel world, long nonRedstoneGameTime, long dayTime) {
 
     }
-}
\ No newline at end of file
+}
diff --git a/net/minecraft/server/Main.java b/net/minecraft/server/Main.java
index fd3553bdc1c3cdbf6aa3dc00e0a4987f8eaa4fb8..6a36fa494e5bce4a815af3578589ee191f7e291b 100644
--- a/net/minecraft/server/Main.java
+++ b/net/minecraft/server/Main.java
@@ -71,6 +71,7 @@ public class Main {
     public static void main(final OptionSet optionSet) { // CraftBukkit - replaces main(String[] args)
         io.papermc.paper.util.LogManagerShutdownThread.hook(); // Paper - Improved watchdog support
         SharedConstants.tryDetectVersion();
+        io.canvasmc.canvas.Config.init(); // Canvas - init config
         /* CraftBukkit start - Replace everything
         OptionParser optionParser = new OptionParser();
         OptionSpec<Void> optionSpec = optionParser.accepts("nogui");
diff --git a/net/minecraft/server/MinecraftServer.java b/net/minecraft/server/MinecraftServer.java
index ec313b45bfa72b76ea902194078e400adfa7de22..1e5808c99266374359b046669c0fbd2ef9e2237d 100644
--- a/net/minecraft/server/MinecraftServer.java
+++ b/net/minecraft/server/MinecraftServer.java
@@ -1600,7 +1600,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         };
         // Folia end - region threading
 
-        this.server.spark.tickStart(); // Paper - spark
+        // Canvas - moved to global region
         new com.destroystokyo.paper.event.server.ServerTickStartEvent((int)region.getCurrentTick()).callEvent(); // Paper - Server Tick Events // Folia - region threading
         // Folia start - region threading
         if (region != null) {
@@ -1655,7 +1655,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         long remaining = scheduledEnd - endTime; // Folia - region ticking
         new com.destroystokyo.paper.event.server.ServerTickEndEvent((int)io.papermc.paper.threadedregions.RegionizedServer.getCurrentTick(), ((double)(endTime - startTime) / 1000000D), remaining).callEvent(); // Folia - region ticking
         // Paper end - Server Tick Events
-        this.server.spark.tickEnd(((double)(endTime - startTime) / 1000000D)); // Paper - spark // Folia - region threading
+        // Canvas - moved to global region
         // Folia - region threading
     }
 
