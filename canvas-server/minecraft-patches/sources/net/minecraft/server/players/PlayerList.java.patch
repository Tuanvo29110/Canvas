--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -340,7 +_,7 @@
             ServerGamePacketListenerImpl serverGamePacketListenerImpl = new ServerGamePacketListenerImpl(this.server, connection, player, cookie);
             // Folia start - rewrite login process
             // only after setting the connection listener to game type, add the connection to this regions list
-            serverLevel.getCurrentWorldData().connections.add(connection);
+            serverLevel.getCurrentWorldData().addConnection(connection, player); // Canvas - rewrite tick scheduler
             // Folia end - rewrite login process
             connection.setupInboundProtocol(
                 GameProtocols.SERVERBOUND_TEMPLATE.bind(RegistryFriendlyByteBuf.decorator(this.server.registryAccess()), serverGamePacketListenerImpl),
@@ -496,6 +_,7 @@
                     serverLevel.getLightEngine(), (java.util.BitSet)null, (java.util.BitSet) null, true) // Paper - Anti-Xray
                 );
             }
+            player.level().getCurrentWorldData().tpsBarTask.addIfContained(player); // Canvas - tpsbar
             // Paper end - Send empty chunk
         }
     }
@@ -661,6 +_,7 @@
         //player.retireScheduler(); // Paper - Folia schedulers // Folia - region threading - move to onDisconnect of common packet listener
         player.getAdvancements().stopListening();
         this.players.remove(player);
+        player.level().getCurrentWorldData().tpsBarTask.players.remove(player); // Canvas - tpsbar
         this.playersByName.remove(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT)); // Spigot
         this.server.getCustomBossEvents().onPlayerDisconnect(player);
         UUID uuid = player.getUUID();
