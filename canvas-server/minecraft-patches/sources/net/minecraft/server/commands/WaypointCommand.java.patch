--- a/net/minecraft/server/commands/WaypointCommand.java
+++ b/net/minecraft/server/commands/WaypointCommand.java
@@ -166,6 +_,17 @@
 
     private static void mutateIcon(CommandSourceStack source, WaypointTransmitter waypoint, Consumer<Waypoint.Icon> mutator) {
         ServerLevel level = (waypoint instanceof LivingEntity livingEntity) ? (net.minecraft.server.level.ServerLevel) livingEntity.level() : source.getLevel(); // Paper - MC-300685 use level of waypoint if it's a living entity for broadcast
+        // Canvas start - region threading - restore waypoints
+        if (waypoint instanceof net.minecraft.world.entity.Entity entity && !ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(entity)) {
+            // run this on the waypoint transmitters thread context if we aren't on the correct context already
+            entity.getBukkitEntity().taskScheduler.schedule((entity1) -> {
+                level.getWaypointManager().untrackWaypoint(waypoint);
+                mutator.accept(waypoint.waypointIcon());
+                level.getWaypointManager().trackWaypoint(waypoint);
+            }, null, 0L);
+            return;
+        }
+        // Canvas end - region threading - restore waypoints
         level.getWaypointManager().untrackWaypoint(waypoint);
         mutator.accept(waypoint.waypointIcon());
         level.getWaypointManager().trackWaypoint(waypoint);
