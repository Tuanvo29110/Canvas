--- a/net/minecraft/server/level/DistanceManager.java
+++ b/net/minecraft/server/level/DistanceManager.java
@@ -126,17 +_,11 @@
     }
 
     public boolean inEntityTickingRange(long chunkPos) {
-        // Paper start - rewrite chunk system
-        final ca.spottedleaf.moonrise.patches.chunk_system.scheduling.NewChunkHolder chunkHolder = this.moonrise$getChunkHolderManager().getChunkHolder(chunkPos);
-        return chunkHolder != null && chunkHolder.isEntityTickingReady();
-        // Paper end - rewrite chunk system
+        return this.moonrise$getChunkMap().level.getCurrentWorldData().entityTickingChunkHolders.contains(chunkPos); // Canvas - optimize entity/block ticking chunk lookups
     }
 
     public boolean inBlockTickingRange(long chunkPos) {
-        // Paper start - rewrite chunk system
-        final ca.spottedleaf.moonrise.patches.chunk_system.scheduling.NewChunkHolder chunkHolder = this.moonrise$getChunkHolderManager().getChunkHolder(chunkPos);
-        return chunkHolder != null && chunkHolder.isTickingReady();
-        // Paper end - rewrite chunk system
+        return this.moonrise$getChunkMap().level.getCurrentWorldData().blockTickingChunkHolders.contains(chunkPos); // Canvas - optimize entity/block ticking chunk lookups
     }
 
     public int getChunkLevel(long chunkPos, boolean simulate) {
