--- a/net/minecraft/server/level/ChunkMap.java
+++ b/net/minecraft/server/level/ChunkMap.java
@@ -646,7 +_,7 @@
                 printFuture(chunkHolder.getEntityTickingChunkFuture()),
                 this.ticketStorage.getTicketDebugString(longKey, false),
                 this.anyPlayerCloseEnoughForSpawning(chunkPos),
-                optional1.<Integer>map(chunk -> chunk.getBlockEntities().size()).orElse(0),
+                optional1.<Integer>map(chunk -> chunk.getAllBlockEntities().length).orElse(0), // Canvas - optimize block entity fetching
                 this.ticketStorage.getTicketDebugString(longKey, true),
                 this.distanceManager.getChunkLevel(longKey, true),
                 optional1.<Integer>map(chunk -> chunk.getBlockTicks().count()).orElse(0),
@@ -1275,7 +_,7 @@
                 }
                 // Folia end - region threading
                 // CraftBukkit start - respect vanish API
-                if (flag && (!ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(player) || !player.getBukkitEntity().canSee(this.entity.getBukkitEntity()))) { // Paper - only consider hits // Folia - region threading
+                if (flag && (!ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(player) || !player.getBukkitEntity().canSeeChunkMapUpdatePlayer(this.entity.getBukkitEntity()))) { // Paper - only consider hits // Folia - region threading // Leaf - optimize canSee checks
                     flag = false;
                 }
                 // CraftBukkit end
