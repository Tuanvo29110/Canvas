--- a/net/minecraft/network/codec/ByteBufCodecs.java
+++ b/net/minecraft/network/codec/ByteBufCodecs.java
@@ -783,7 +_,22 @@
                 String string = Utf8String.read(buffer, maxLength);
 
                 try {
-                    return LenientJsonParser.parse(string);
+                    // Canvas start - no chat reports
+                    JsonElement returnValue = LenientJsonParser.parse(string);
+                    if (io.canvasmc.canvas.Config.INSTANCE.networking.noChatReports.enable && this.isServerStatusElement(returnValue)) {
+                        net.minecraft.network.protocol.status.ServerStatus status = ((net.minecraft.network.protocol.status.ServerStatus) net.minecraft.network.protocol.status.ServerStatus.CODEC.parse(com.mojang.serialization.JsonOps.INSTANCE, returnValue)
+                            .getOrThrow(_ -> new DecoderException("Failed to decode json: " + string)));
+                        com.google.gson.JsonObject object = returnValue.getAsJsonObject();
+                        boolean preventsReports = object.has("preventsChatReports") && object.get("preventsChatReports").getAsBoolean();
+
+                        if (io.canvasmc.canvas.Config.INSTANCE.networking.noChatReports.debugLog) {
+                            net.minecraft.server.MinecraftServer.LOGGER.info("Received chat report prevention status from ServerStatus packet: {}", preventsReports);
+                        }
+
+                        status.setPreventsChatReports(preventsReports);
+                    }
+                    return returnValue;
+                    // Canvas end
                 } catch (JsonSyntaxException var4) {
                     throw new DecoderException("Failed to parse JSON", var4);
                 }
@@ -791,9 +_,41 @@
 
             @Override
             public void encode(ByteBuf buffer, JsonElement value) {
+                // Canvas start - no chat reports
+                if (io.canvasmc.canvas.Config.INSTANCE.networking.noChatReports.enable &&
+                    !(!io.canvasmc.canvas.Config.INSTANCE.networking.noChatReports.addQueryData || !this.isServerStatusElement(value))) {
+
+                    if (io.canvasmc.canvas.Config.INSTANCE.networking.noChatReports.debugLog) {
+                        net.minecraft.server.MinecraftServer.LOGGER.info("Adding chat report prevention status to ServerStatus packet.");
+                    }
+
+                    com.google.gson.JsonObject object = value.getAsJsonObject();
+                    object.addProperty("preventsChatReports", true);
+
+                    String string = GSON.toJson(object);
+                    Utf8String.write(buffer, string, 32767);
+
+                    return;
+                }
+                // Canvas end
                 String string = GSON.toJson(value);
                 Utf8String.write(buffer, string, maxLength);
             }
+            // Canvas start - no chat reports
+            private boolean isServerStatusElement(JsonElement element) {
+                if (!element.isJsonObject())
+                    return false;
+
+                com.google.gson.JsonObject object = element.getAsJsonObject();
+
+                if (!object.has("version") || !object.get("version").isJsonObject())
+                    return false;
+
+                com.google.gson.JsonObject version = object.get("version").getAsJsonObject();
+
+                return version.has("name") && version.has("protocol");
+            }
+            // Canvas end
         };
     }
 }
