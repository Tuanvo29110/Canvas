--- a/net/minecraft/commands/arguments/selector/options/EntitySelectorOptions.java
+++ b/net/minecraft/commands/arguments/selector/options/EntitySelectorOptions.java
@@ -357,7 +_,7 @@
             }, entitySelectorParser -> true, Component.translatable("argument.entity.options.nbt.description"));
             register("scores", parser -> {
                 StringReader reader = parser.getReader();
-                Map<String, MinMaxBounds.Ints> map = Maps.newHashMap();
+                it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<String, MinMaxBounds.Ints> map = new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>(); // Canvas - optimized collection
                 reader.expect('{');
                 reader.skipWhitespace();
 
@@ -380,7 +_,7 @@
                     parser.addPredicate(entity -> {
                         Scoreboard scoreboard = entity.getServer().getScoreboard();
 
-                        for (Entry<String, MinMaxBounds.Ints> entry : map.entrySet()) {
+                        for (Entry<String, MinMaxBounds.Ints> entry : map.object2ObjectEntrySet()) { // Canvas - optimized collection
                             Objective objective = scoreboard.getObjective(entry.getKey());
                             if (objective == null) {
                                 return false;
