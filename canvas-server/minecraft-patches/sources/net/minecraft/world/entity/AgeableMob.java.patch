--- a/net/minecraft/world/entity/AgeableMob.java
+++ b/net/minecraft/world/entity/AgeableMob.java
@@ -2,17 +_,21 @@
 
 import com.google.common.annotations.VisibleForTesting;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.entity.SensorHelper;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.DifficultyInstance;
+import net.minecraft.world.entity.ai.memory.MemoryModuleType;
+import net.minecraft.world.entity.ai.sensing.SensorType;
 import net.minecraft.world.entity.vehicle.AbstractBoat;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.storage.ValueInput;
 import net.minecraft.world.level.storage.ValueOutput;
+import java.util.Optional;
 
 public abstract class AgeableMob extends PathfinderMob {
     private static final EntityDataAccessor<Boolean> DATA_BABY_ID = SynchedEntityData.defineId(AgeableMob.class, EntityDataSerializers.BOOLEAN);
@@ -125,6 +_,16 @@
     public void onSyncedDataUpdated(EntityDataAccessor<?> key) {
         if (DATA_BABY_ID.equals(key)) {
             this.refreshDimensions();
+            // Canvas start
+            if (isBaby()) {
+                SensorHelper.enableSensor(this, SensorType.NEAREST_ADULT, true);
+            } else {
+                SensorHelper.disableSensor(this, SensorType.NEAREST_ADULT);
+                if (this.getBrain().hasMemoryValue(MemoryModuleType.NEAREST_VISIBLE_ADULT)) {
+                    this.getBrain().setMemory(MemoryModuleType.NEAREST_VISIBLE_ADULT, Optional.empty());
+                }
+            }
+            // Canvas end
         }
 
         super.onSyncedDataUpdated(key);
