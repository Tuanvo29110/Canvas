--- a/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
+++ b/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
@@ -297,20 +_,27 @@
                 this.tickPart(this.wing1, cos1 * 4.5F, 2.0, sin1 * 4.5F);
                 this.tickPart(this.wing2, cos1 * -4.5F, 2.0, sin1 * -4.5F);
                 if (this.level() instanceof ServerLevel serverLevel2 && this.hurtTime == 0) {
-                    this.knockBack(
-                        serverLevel2,
-                        serverLevel2.getEntities(
-                            this, this.wing1.getBoundingBox().inflate(4.0, 2.0, 4.0).move(0.0, -2.0, 0.0), EntitySelector.NO_CREATIVE_OR_SPECTATOR
-                        )
-                    );
-                    this.knockBack(
-                        serverLevel2,
-                        serverLevel2.getEntities(
-                            this, this.wing2.getBoundingBox().inflate(4.0, 2.0, 4.0).move(0.0, -2.0, 0.0), EntitySelector.NO_CREATIVE_OR_SPECTATOR
-                        )
-                    );
-                    this.hurt(serverLevel2, serverLevel2.getEntities(this, this.head.getBoundingBox().inflate(1.0), EntitySelector.NO_CREATIVE_OR_SPECTATOR));
-                    this.hurt(serverLevel2, serverLevel2.getEntities(this, this.neck.getBoundingBox().inflate(1.0), EntitySelector.NO_CREATIVE_OR_SPECTATOR));
+                    // Canvas start - ensure each body part is within the running region for knockback and hurt to avoid thread ownership issues
+                    AABB wing1Box = this.wing1.getBoundingBox().inflate(4.0, 2.0, 4.0).move(0.0, -2.0, 0.0);
+                    if (ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(this.level(), BlockPos.containing(wing1Box.getCenter()))) {
+                        this.knockBack(serverLevel2, serverLevel2.getEntities(this, wing1Box, EntitySelector.NO_CREATIVE_OR_SPECTATOR));
+                    }
+
+                    AABB wing2Box = this.wing2.getBoundingBox().inflate(4.0, 2.0, 4.0).move(0.0, -2.0, 0.0);
+                    if (ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(this.level(), BlockPos.containing(wing2Box.getCenter()))) {
+                        this.knockBack(serverLevel2, serverLevel2.getEntities(this, wing2Box, EntitySelector.NO_CREATIVE_OR_SPECTATOR));
+                    }
+
+                    AABB headBox = this.head.getBoundingBox().inflate(1.0);
+                    if (ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(this.level(), BlockPos.containing(headBox.getCenter()))) {
+                        this.hurt(serverLevel2, serverLevel2.getEntities(this, headBox, EntitySelector.NO_CREATIVE_OR_SPECTATOR));
+                    }
+
+                    AABB neckBox = this.neck.getBoundingBox().inflate(1.0);
+                    if (ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(this.level(), BlockPos.containing(neckBox.getCenter()))) {
+                        this.hurt(serverLevel2, serverLevel2.getEntities(this, neckBox, EntitySelector.NO_CREATIVE_OR_SPECTATOR));
+                    }
+                    // Canvas end - ensure each body part is within the running region for knockback and hurt to avoid thread ownership issues
                 }
 
                 float sin2 = Mth.sin(this.getYRot() * (float) (Math.PI / 180.0) - this.yRotA * 0.01F);
