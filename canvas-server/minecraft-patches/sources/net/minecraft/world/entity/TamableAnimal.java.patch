--- a/net/minecraft/world/entity/TamableAnimal.java
+++ b/net/minecraft/world/entity/TamableAnimal.java
@@ -272,50 +_,61 @@
     }
 
     private boolean maybeTeleportTo(int x, int y, int z) {
-        if (!this.canTeleportTo(new BlockPos(x, y, z))) {
-            return false;
-        } else {
-            // CraftBukkit start
-            org.bukkit.event.entity.EntityTeleportEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTeleportEvent(this, x + 0.5, y, z + 0.5);
-            if (event.isCancelled() || event.getTo() == null) {
-                return false;
+        // Canvas start - fix folia issues
+        BlockPos target = new BlockPos(x, y, z);
+        Level sourceWorld = this.level();
+        this.getBukkitEntity().taskScheduler.schedule((TamableAnimal nmsEntity) -> {
+            if (nmsEntity.level() != sourceWorld || nmsEntity.isRemoved()) {
+                return;
+            }
+
+            if (!nmsEntity.canTeleportTo(target)) {
+                return;
+            }
+
+            org.bukkit.event.entity.EntityTeleportEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTeleportEvent(nmsEntity, x + 0.5, y, z + 0.5);
+            if (event.isCancelled() || event.getTo() == null) { // Paper - prevent NP on null event to location
+                return;
             }
             org.bukkit.Location to = event.getTo();
             // Folia start - region threading - can't teleport here, we may be removed by teleport logic - delay until next tick
             // also, use teleportAsync so that crossing region boundaries will not blow up
-            org.bukkit.Location finalTo = to;
-            Level sourceWorld = this.level();
-            this.getBukkitEntity().taskScheduler.schedule((TamableAnimal nmsEntity) -> {
-                if (nmsEntity.level() == sourceWorld) {
-                    nmsEntity.teleportAsync(
-                        (net.minecraft.server.level.ServerLevel)nmsEntity.level(),
-                        new net.minecraft.world.phys.Vec3(finalTo.getX(), finalTo.getY(), finalTo.getZ()),
-                        Float.valueOf(finalTo.getYaw()), Float.valueOf(finalTo.getPitch()),
-                        net.minecraft.world.phys.Vec3.ZERO, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN, Entity.TELEPORT_FLAG_LOAD_CHUNK,
-                        null
-                    );
-                }
-            }, null, 1L);
+            nmsEntity.teleportAsync(
+                (ServerLevel)nmsEntity.level(),
+                new net.minecraft.world.phys.Vec3(to.getX(), to.getY(), to.getZ()),
+                Float.valueOf(to.getYaw()), Float.valueOf(to.getPitch()),
+                net.minecraft.world.phys.Vec3.ZERO,
+                org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN,
+                Entity.TELEPORT_FLAG_LOAD_CHUNK,
+                null
+            );
             // Folia end - region threading - can't teleport here, we may be removed by teleport logic - delay until next tick
             // CraftBukkit end
-            this.navigation.stop();
-            return true;
-        }
+            nmsEntity.navigation.stop();
+        }, null, 1L);
+        return true;
+        // Canvas end - fix folia issues
     }
 
     private boolean canTeleportTo(BlockPos pos) {
+        // Canvas start - fix folia issues
+        if (!this.level().hasChunkAt(pos) || !this.level().hasChunkAt(pos.below())) {
+            return false;
+        }
+
         PathType pathTypeStatic = WalkNodeEvaluator.getPathTypeStatic(this, pos);
         if (pathTypeStatic != PathType.WALKABLE) {
             return false;
-        } else {
-            BlockState blockState = this.level().getBlockState(pos.below());
-            if (!this.canFlyToOwner() && blockState.getBlock() instanceof LeavesBlock) {
-                return false;
-            } else {
-                BlockPos blockPos = pos.subtract(this.blockPosition());
-                return this.level().noCollision(this, this.getBoundingBox().move(blockPos));
-            }
-        }
+        }
+
+        BlockState blockState = this.level().getBlockState(pos.below());
+        if (!this.canFlyToOwner() && blockState.getBlock() instanceof LeavesBlock) {
+            return false;
+        }
+
+        BlockPos blockPos = pos.subtract(this.blockPosition());
+        return this.level().noCollision(this, this.getBoundingBox().move(blockPos));
+        // Canvas end - fix folia issues
     }
 
     public final boolean unableToMoveToOwner() {
