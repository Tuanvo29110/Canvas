--- a/net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget.java
+++ b/net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget.java
@@ -56,11 +_,11 @@
                                         return true;
                                     }
                                 };
-                                Set<Pair<Holder<PoiType>, BlockPos>> set = poiManager.findAllWithType(
-                                        poi -> poi.is(PoiTypes.HOME), predicate, mob.blockPosition(), 48, PoiManager.Occupancy.ANY
-                                    )
-                                    .collect(Collectors.toSet());
-                                Path path = AcquirePoi.findPathToPois(mob, set);
+                                // Leaf start - Re-route SetClosestHomeAsWalkTarget's poi finding to paper's faster logic
+                                java.util.List<Pair<Holder<PoiType>, BlockPos>> poiposes = new java.util.ArrayList<>();
+                                io.papermc.paper.util.PoiAccess.findAnyPoiPositions(poiManager, poi -> poi.is(PoiTypes.HOME), predicate, mob.blockPosition(), 48, PoiManager.Occupancy.ANY, false, Integer.MAX_VALUE, poiposes);
+                                // Leaf end - Re-route SetClosestHomeAsWalkTarget's poi finding to paper's faster logic
+                                Path path = AcquirePoi.findPathToPois(mob, new java.util.HashSet<>(poiposes)); // Leaf - Re-route SetClosestHomeAsWalkTarget's poi finding to paper's faster logic
                                 if (path != null && path.canReach()) {
                                     BlockPos target = path.getTarget();
                                     Optional<Holder<PoiType>> type = poiManager.getType(target);
