--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -316,7 +_,7 @@
     protected UUID uuid = Mth.createInsecureUUID(this.random);
     protected String stringUUID = this.uuid.toString();
     private boolean hasGlowingTag;
-    private final Set<String> tags = new io.papermc.paper.util.SizeLimitedSet<>(new it.unimi.dsi.fastutil.objects.ObjectOpenHashSet<>(), MAX_ENTITY_TAG_COUNT); // Paper - fully limit tag size - replace set impl
+    private final Set<String> tags = new io.papermc.paper.util.SizeLimitedSet<>(it.unimi.dsi.fastutil.objects.ObjectSets.synchronize(new it.unimi.dsi.fastutil.objects.ObjectOpenHashSet<>()), MAX_ENTITY_TAG_COUNT); // Paper - fully limit tag size - replace set impl // Canvas - fix commands with region threading
     private final double[] pistonDeltas = new double[]{0.0, 0.0, 0.0};
     private long pistonDeltasGameTime = Long.MIN_VALUE; // Folia - region threading
     protected EntityDimensions dimensions;
@@ -4342,6 +_,7 @@
         EntityTreeNode passengerTree = this.detachPassengers();
         List<EntityTreeNode> fullPassengerTree = passengerTree.getFullTree();
         ServerLevel originWorld = (ServerLevel)this.level;
+        if (destination.isUnloading) return false; // Canvas - fix world loading/unloading
 
         for (EntityTreeNode node : fullPassengerTree) {
             node.root.preChangeDimension();
@@ -4606,6 +_,7 @@
                 }
             }
         }
+        if (to.isUnloading) return false; // Canvas - fix world loading/unloading
 
         return true;
     }
