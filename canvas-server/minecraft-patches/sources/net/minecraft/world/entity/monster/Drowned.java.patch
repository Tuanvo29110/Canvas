--- a/net/minecraft/world/entity/monster/Drowned.java
+++ b/net/minecraft/world/entity/monster/Drowned.java
@@ -297,6 +_,7 @@
     @Override
     public void updateSwimming() {
         if (!this.level().isClientSide) {
+            (this).lithium$updateNavigationRegistration(); // Canvas
             this.setSwimming(this.isEffectiveAi() && this.isUnderWater() && this.wantsToSwim());
         }
     }
@@ -308,7 +_,7 @@
 
     protected boolean closeToNextPos() {
         Path path = this.getNavigation().getPath();
-        if (path != null) {
+        if (path != null && path.isProcessed()) { // Canvas - ensure path is processed
             BlockPos target = path.getTarget();
             if (target != null) {
                 double d = this.distanceToSqr(target.getX(), target.getY(), target.getZ());
@@ -398,12 +_,20 @@
         public void start() {
             this.drowned.setSearchingForLand(false);
             super.start();
+            (this.drowned).lithium$updateNavigationRegistration(); // Canvas
         }
 
         @Override
         public void stop() {
             super.stop();
         }
+        // Canvas start - Async target finding
+
+        @Override
+        protected TypeToCheck typeToCheck() {
+            return TypeToCheck.Drowned;
+        }
+        // Canvas end - Async target finding
     }
 
     static class DrownedGoToWaterGoal extends Goal {
