--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -69,8 +_,6 @@
 import net.minecraft.tags.ItemTags;
 import net.minecraft.tags.TagKey;
 import net.minecraft.util.Mth;
-import net.minecraft.util.profiling.Profiler;
-import net.minecraft.util.profiling.ProfilerFiller;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.damagesource.CombatRules;
@@ -449,8 +_,6 @@
         }
 
         super.baseTick();
-        ProfilerFiller profilerFiller = Profiler.get();
-        profilerFiller.push("livingEntityBaseTick");
         if (this.fireImmune() || this.level().isClientSide) {
             this.clearFire();
         }
@@ -535,7 +_,6 @@
         this.yBodyRotO = this.yBodyRot;
         this.yRotO = this.getYRot();
         this.xRotO = this.getXRot();
-        profilerFiller.pop();
     }
 
     @Override
@@ -3309,11 +_,7 @@
             f1 = this.getYRot();
         }
 
-        ProfilerFiller profilerFiller = Profiler.get();
-        profilerFiller.push("headTurn");
         this.tickHeadTurn(f1);
-        profilerFiller.pop();
-        profilerFiller.push("rangeChecks");
 
         // Paper start - stop large pitch and yaw changes from crashing the server
         this.yRotO += Math.round((this.getYRot() - this.yRotO) / 360.0F) * 360.0F;
@@ -3325,7 +_,6 @@
         this.yHeadRotO += Math.round((this.yHeadRot - this.yHeadRotO) / 360.0F) * 360.0F;
         // Paper end - stop large pitch and yaw changes from crashing the server
 
-        profilerFiller.pop();
         if (this.isFallFlying()) {
             this.fallFlyTicks++;
         } else {
@@ -3501,21 +_,15 @@
         }
 
         this.setDeltaMovement(d, d1, d2);
-        ProfilerFiller profilerFiller = Profiler.get();
-        profilerFiller.push("ai");
         this.applyInput();
         if (this.isImmobile()) {
             this.jumping = false;
             this.xxa = 0.0F;
             this.zza = 0.0F;
         } else if (this.isEffectiveAi() && !this.level().isClientSide) {
-            profilerFiller.push("newAi");
             this.serverAiStep();
-            profilerFiller.pop();
         }
 
-        profilerFiller.pop();
-        profilerFiller.push("jump");
         if (this.jumping && this.isAffectedByFluids()) {
             double fluidHeight;
             if (this.isInLava()) {
@@ -3544,8 +_,6 @@
             this.noJumpDelay = 0;
         }
 
-        profilerFiller.pop();
-        profilerFiller.push("travel");
         if (this.isFallFlying()) {
             this.updateFallFlying();
         }
@@ -3570,9 +_,7 @@
             this.calculateEntityAnimation(this instanceof FlyingAnimal);
         }
 
-        profilerFiller.pop();
         if (this.level() instanceof ServerLevel serverLevel) {
-            profilerFiller.push("freezing");
             if ((!this.isInPowderSnow || !this.canFreeze()) && !this.freezeLocked) { // Paper - Freeze Tick Lock API
                 this.setTicksFrozen(Math.max(0, this.getTicksFrozen() - 2));
             }
@@ -3582,18 +_,14 @@
             if (this.tickCount % 40 == 0 && this.isFullyFrozen() && this.canFreeze()) {
                 this.hurtServer(serverLevel, this.damageSources().freeze(), 1.0F);
             }
-
-            profilerFiller.pop();
         }
 
-        profilerFiller.push("push");
         if (this.autoSpinAttackTicks > 0) {
             this.autoSpinAttackTicks--;
             this.checkAutoSpinAttack(boundingBox, this.getBoundingBox());
         }
 
         this.pushEntities();
-        profilerFiller.pop();
         // Paper start - Add EntityMoveEvent
         if (((ServerLevel) this.level()).getCurrentWorldData().hasEntityMoveEvent && !(this instanceof Player)) { // Folia - region threading
             if (this.xo != this.getX() || this.yo != this.getY() || this.zo != this.getZ() || this.yRotO != this.getYRot() || this.xRotO != this.getXRot()) {
