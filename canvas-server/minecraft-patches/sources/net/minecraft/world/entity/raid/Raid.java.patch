--- a/net/minecraft/world/entity/raid/Raid.java
+++ b/net/minecraft/world/entity/raid/Raid.java
@@ -276,8 +_,16 @@
         this.raidEvent.removeAllPlayers();
         this.status = Raid.RaidStatus.STOPPED;
     }
+    // Canvas start
+    private boolean isBarDirty;
 
     public void tick(ServerLevel level) {
+        if (this.isBarDirty) {
+            this.raidEvent.setProgress(Mth.clamp(this.getHealthOfLivingRaiders() / this.totalHealth, 0.0F, 1.0F));
+
+            this.isBarDirty = false;
+        }
+    // Canvas end
         if (!this.isStopped()) {
             if (this.status == Raid.RaidStatus.ONGOING) {
                 boolean flag = this.active;
@@ -503,7 +_,7 @@
         Collection<ServerPlayer> players = this.raidEvent.getPlayers();
         long randomLong = this.random.nextLong();
 
-        for (ServerPlayer serverPlayer : level.players()) {
+        for (ServerPlayer serverPlayer : level.getLocalPlayers()) { // Canvas - Threaded Regions
             Vec3 vec3 = serverPlayer.position();
             Vec3 vec31 = Vec3.atCenterOf(pos);
             double squareRoot = Math.sqrt((vec31.x - vec3.x) * (vec31.x - vec3.x) + (vec31.z - vec3.z) * (vec31.z - vec3.z));
@@ -588,7 +_,7 @@
     }
 
     public void updateBossbar() {
-        this.raidEvent.setProgress(Mth.clamp(this.getHealthOfLivingRaiders() / this.totalHealth, 0.0F, 1.0F));
+        this.isBarDirty = true; // Canvas
     }
 
     public float getHealthOfLivingRaiders() {
