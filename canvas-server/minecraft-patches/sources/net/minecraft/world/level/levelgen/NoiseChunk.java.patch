--- a/net/minecraft/world/level/levelgen/NoiseChunk.java
+++ b/net/minecraft/world/level/levelgen/NoiseChunk.java
@@ -56,7 +_,8 @@
     long interpolationCounter;
     long arrayInterpolationCounter;
     int arrayIndex;
-    private final DensityFunction.ContextProvider sliceFillingContextProvider = new DensityFunction.ContextProvider() {
+    // Canvas start - dfc
+    public class NoiseChunkSliceFillingContextProvider implements DensityFunction.ContextProvider {
         @Override
         public DensityFunction.FunctionContext forIndex(int arrayIndex) {
             NoiseChunk.this.cellStartBlockY = (arrayIndex + NoiseChunk.this.cellNoiseMinY) * NoiseChunk.this.cellHeight;
@@ -76,7 +_,9 @@
                 values[i] = function.compute(NoiseChunk.this);
             }
         }
-    };
+    }
+    private final DensityFunction.ContextProvider sliceFillingContextProvider = new NoiseChunkSliceFillingContextProvider();
+    // Canvas end
 
     public static NoiseChunk forChunk(
         ChunkAccess chunk,
@@ -238,7 +_,7 @@
 
     public void initializeForFirstCellX() {
         if (this.interpolating) {
-            throw new IllegalStateException("Staring interpolation twice");
+            return; // Canvas - just return
         } else {
             this.interpolating = true;
             this.interpolationCounter = 0L;
