--- a/net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider.java
+++ b/net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider.java
@@ -55,17 +_,20 @@
 
     @Override
     public BlockState getState(RandomSource random, BlockPos pos) {
-        BlockState state = this.source.getState(random, pos);
-        if (this.property == null || !state.hasProperty(this.property)) {
-            IntegerProperty integerProperty = findProperty(state, this.propertyName);
-            if (integerProperty == null) {
-                return state;
+        // Canvas start - rewrite moonrise executor - threading fixes
+        BlockState blockState = this.source.getState(random, pos);
+        IntegerProperty propertyLocal = this.property; // used as cache only
+        if (propertyLocal == null || !blockState.hasProperty(propertyLocal)) {
+            IntegerProperty intProperty = findProperty(blockState, this.propertyName);
+            if (intProperty == null) {
+                return blockState;
             }
 
-            this.property = integerProperty;
+            this.property = propertyLocal = intProperty;
         }
 
-        return state.setValue(this.property, this.values.sample(random));
+        return blockState.trySetValue(propertyLocal, Integer.valueOf(this.values.sample(random)));
+        // Canvas end - rewrite moonrise executor - threading fixes
     }
 
     @Nullable
