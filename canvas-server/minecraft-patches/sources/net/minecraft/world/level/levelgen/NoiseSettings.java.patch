--- a/net/minecraft/world/level/levelgen/NoiseSettings.java
+++ b/net/minecraft/world/level/levelgen/NoiseSettings.java
@@ -8,7 +_,61 @@
 import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.dimension.DimensionType;
 
-public record NoiseSettings(int minY, int height, int noiseSizeHorizontal, int noiseSizeVertical) {
+// Canvas start - optimize noise gen - convert to class
+public final class NoiseSettings {
+    private final int minY;
+    private final int height;
+    private final int noiseSizeHorizontal;
+    private final int noiseSizeVertical;
+    private int horizontalCellBlockCount;
+    private int verticalCellBlockCount;
+
+    public NoiseSettings(int minY, int height, int noiseSizeHorizontal, int noiseSizeVertical) {
+        this.minY = minY;
+        this.height = height;
+        this.noiseSizeHorizontal = noiseSizeHorizontal;
+        this.noiseSizeVertical = noiseSizeVertical;
+        this.horizontalCellBlockCount = QuartPos.toBlock(noiseSizeHorizontal);
+        this.verticalCellBlockCount = QuartPos.toBlock(noiseSizeVertical);
+    }
+
+    public int minY() {
+        return minY;
+    }
+
+    public int height() {
+        return height;
+    }
+
+    public int noiseSizeHorizontal() {
+        return noiseSizeHorizontal;
+    }
+
+    public int noiseSizeVertical() {
+        return noiseSizeVertical;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (obj == this) return true;
+        if (obj == null || obj.getClass() != this.getClass()) return false;
+        var that = (NoiseSettings) obj;
+        return this.minY == that.minY &&
+            this.height == that.height &&
+            this.noiseSizeHorizontal == that.noiseSizeHorizontal &&
+            this.noiseSizeVertical == that.noiseSizeVertical;
+    }
+
+    @Override
+    public String toString() {
+        return "NoiseSettings[" +
+            "minY=" + minY + ", " +
+            "height=" + height + ", " +
+            "noiseSizeHorizontal=" + noiseSizeHorizontal + ", " +
+            "noiseSizeVertical=" + noiseSizeVertical + ']';
+    }
+
+// Canvas end - optimize noise gen - convert to class
     public static final Codec<NoiseSettings> CODEC = RecordCodecBuilder.<NoiseSettings>create(
             instance -> instance.group(
                     Codec.intRange(DimensionType.MIN_Y, DimensionType.MAX_Y).fieldOf("min_y").forGetter(NoiseSettings::minY),
@@ -44,11 +_,11 @@
     }
 
     public int getCellHeight() {
-        return QuartPos.toBlock(this.noiseSizeVertical());
+        return this.verticalCellBlockCount; // Canvas - optimize noise gen
     }
 
     public int getCellWidth() {
-        return QuartPos.toBlock(this.noiseSizeHorizontal());
+        return this.horizontalCellBlockCount; // Canvas - optimize noise gen
     }
 
     public NoiseSettings clampToHeightAccessor(LevelHeightAccessor heightAccessor) {
