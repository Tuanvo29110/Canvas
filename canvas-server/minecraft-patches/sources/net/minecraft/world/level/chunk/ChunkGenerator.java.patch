--- a/net/minecraft/world/level/chunk/ChunkGenerator.java
+++ b/net/minecraft/world/level/chunk/ChunkGenerator.java
@@ -27,7 +_,6 @@
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
 import net.minecraft.SharedConstants;
-import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
 import net.minecraft.core.HolderLookup;
@@ -342,7 +_,11 @@
             Registry<Structure> registry = level.registryAccess().lookupOrThrow(Registries.STRUCTURE);
             Map<Integer, List<Structure>> map = registry.stream().collect(Collectors.groupingBy(structure1 -> structure1.step().ordinal()));
             List<FeatureSorter.StepFeatureData> list = this.featuresPerStep.get();
-            WorldgenRandom worldgenRandom = new WorldgenRandom(new XoroshiroRandomSource(RandomSupport.generateUniqueSeed()));
+            // Leaf start - Matter - Secure Seed
+            WorldgenRandom worldgenRandom = io.canvasmc.canvas.Config.INSTANCE.secureSeed
+                ? new su.plo.matter.WorldgenCryptoRandom(blockPos.getX(), blockPos.getZ(), su.plo.matter.Globals.Salt.UNDEFINED, 0)
+                : new WorldgenRandom(new XoroshiroRandomSource(RandomSupport.generateUniqueSeed()));
+            // Leaf end - Matter - Secure Seed
             long l = worldgenRandom.setDecorationSeed(level.getSeed(), blockPos.getX(), blockPos.getZ());
             Set<Holder<Biome>> set = new ObjectArraySet<>();
             ChunkPos.rangeClosed(sectionPos.chunk(), 1).forEach(chunkPos -> {
@@ -488,6 +_,12 @@
     public WeightedList<MobSpawnSettings.SpawnerData> getMobsAt(Holder<Biome> biome, StructureManager structureManager, MobCategory category, BlockPos pos) {
         Map<Structure, LongSet> allStructuresAt = structureManager.getAllStructuresAt(pos);
 
+    // Canvas start - optimize natural spawning
+        return getMobsAt(biome, structureManager, category, pos, allStructuresAt);
+    }
+
+    public WeightedList<MobSpawnSettings.SpawnerData> getMobsAt(Holder<Biome> biome, StructureManager structureManager, MobCategory category, BlockPos pos, Map<Structure, LongSet> allStructuresAt) {
+    // Canvas end - optimize natural spawning
         for (Entry<Structure, LongSet> entry : allStructuresAt.entrySet()) {
             Structure structure = entry.getKey();
             StructureSpawnOverride structureSpawnOverride = structure.spawnOverrides().get(category);
@@ -551,8 +_,15 @@
                         } else {
                             ArrayList<StructureSet.StructureSelectionEntry> list1 = new ArrayList<>(list.size());
                             list1.addAll(list);
-                            WorldgenRandom worldgenRandom = new WorldgenRandom(new LegacyRandomSource(0L));
-                            worldgenRandom.setLargeFeatureSeed(structureState.getLevelSeed(), pos.x, pos.z);
+                            // Leaf start - Matter - Secure Seed
+                            WorldgenRandom worldgenRandom;
+                            if (io.canvasmc.canvas.Config.INSTANCE.secureSeed) {
+                                worldgenRandom = new su.plo.matter.WorldgenCryptoRandom(pos.x, pos.z, su.plo.matter.Globals.Salt.GENERATE_FEATURE, 0);
+                            } else {
+                                worldgenRandom = new WorldgenRandom(new LegacyRandomSource(0L));
+                                worldgenRandom.setLargeFeatureSeed(structureState.getLevelSeed(), pos.x, pos.z);
+                            }
+                            // Leaf end - Matter - Secure Seed
                             int i = 0;
 
                             for (StructureSet.StructureSelectionEntry structureSelectionEntry1 : list1) {
