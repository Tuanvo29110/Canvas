--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -405,7 +_,7 @@
     private static Optional<MobSpawnSettings.SpawnerData> getRandomSpawnMobAt(
         ServerLevel level, StructureManager structureManager, ChunkGenerator generator, MobCategory category, RandomSource random, BlockPos pos
     ) {
-        Holder<Biome> biome = level.getBiome(pos);
+        Holder<Biome> biome = io.canvasmc.canvas.Config.INSTANCE.chunks.biomeCache.mobSpawn ? level.getBiomeCached(null, pos) : level.getBiome(pos); // Canvas - cache getBiome
         return category == MobCategory.WATER_AMBIENT && biome.is(BiomeTags.REDUCED_WATER_AMBIENT_SPAWNS) && random.nextFloat() < 0.98F
             ? Optional.empty()
             : mobsAt(level, structureManager, generator, category, pos, biome).getRandom(random);
@@ -422,7 +_,7 @@
     ) {
         return isInNetherFortressBounds(pos, level, cetagory, structureManager)
             ? NetherFortressStructure.FORTRESS_ENEMIES
-            : generator.getMobsAt(biome != null ? biome : level.getBiome(pos), structureManager, cetagory, pos);
+            : generator.getMobsAt(biome != null ? biome : (io.canvasmc.canvas.Config.INSTANCE.chunks.biomeCache.mobSpawn ? level.getBiomeCached(null, pos) : level.getBiome(pos)), structureManager, cetagory, pos); // Canvas - cache getBiome
     }
 
     public static boolean isInNetherFortressBounds(BlockPos pos, ServerLevel level, MobCategory category, StructureManager structureManager) {
