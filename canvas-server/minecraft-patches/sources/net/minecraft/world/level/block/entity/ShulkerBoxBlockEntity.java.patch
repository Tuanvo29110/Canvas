--- a/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
@@ -32,7 +_,7 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 
-public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity implements WorldlyContainer {
+public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity implements WorldlyContainer, io.canvasmc.canvas.chunk.block.SleepingBlockEntity { // Canvas - block entity sleeping
     public static final int COLUMNS = 9;
     public static final int ROWS = 3;
     public static final int CONTAINER_SIZE = 27;
@@ -48,6 +_,30 @@
     private float progressOld;
     @Nullable
     private final DyeColor color;
+    // Canvas start - block entity sleeping
+    private net.minecraft.world.level.chunk.LevelChunk.RebindableTickingBlockEntityWrapper tickWrapper = null;
+    private TickingBlockEntity sleepingTicker = null;
+
+    @Override
+    public net.minecraft.world.level.chunk.LevelChunk.RebindableTickingBlockEntityWrapper lithium$getTickWrapper() {
+        return this.tickWrapper;
+    }
+
+    @Override
+    public void lithium$setTickWrapper(final net.minecraft.world.level.chunk.LevelChunk.RebindableTickingBlockEntityWrapper tickWrapper) {
+        this.tickWrapper = tickWrapper;
+    }
+
+    @Override
+    public TickingBlockEntity lithium$getSleepingTicker() {
+        return this.sleepingTicker;
+    }
+
+    @Override
+    public void lithium$setSleepingTicker(final TickingBlockEntity sleepingTicker) {
+        this.sleepingTicker = sleepingTicker;
+    }
+    // Canvas end - block entity sleeping
 
     // CraftBukkit start - add fields and methods
     public List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<>();
@@ -134,6 +_,11 @@
                     doNeighborUpdates(level, pos, state);
                 }
         }
+        // Canvas start - block entity sleeping
+        if (this.animationStatus == ShulkerBoxBlockEntity.AnimationStatus.CLOSED && this.progressOld == 0.0f && this.progress == 0.0f) {
+            this.lithium$startSleeping();
+        }
+        // Canvas end - block entity sleeping
     }
 
     public ShulkerBoxBlockEntity.AnimationStatus getAnimationStatus() {
@@ -174,6 +_,11 @@
 
     @Override
     public boolean triggerEvent(int id, int type) {
+        // Canvas start - block entity sleeping
+        if (this.sleepingTicker != null) {
+            this.wakeUpNow();
+        }
+        // Canvas end - block entity sleeping
         if (id == 1) {
             this.openCount = type;
             if (type == 0) {
