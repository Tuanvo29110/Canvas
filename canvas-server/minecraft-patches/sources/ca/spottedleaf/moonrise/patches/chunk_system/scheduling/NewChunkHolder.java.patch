--- a/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
@@ -67,6 +_,13 @@
     public final int chunkZ;
 
     public final ChunkTaskScheduler scheduler;
+    // Canvas start - optimize entity/block ticking chunk lookups
+    private final long cachedLongPos;
+
+    public long getCachedLongPos() {
+        return cachedLongPos;
+    }
+    // Canvas end - optimize entity/block ticking chunk lookups
 
     // load/unload state
 
@@ -651,6 +_,7 @@
         this.world = world;
         this.chunkX = chunkX;
         this.chunkZ = chunkZ;
+        this.cachedLongPos = ((long)chunkZ << 32) | (chunkX & 0xFFFFFFFFL); // Canvas - optimize entity/block ticking chunk lookups
         this.scheduler = scheduler;
         this.vanillaChunkHolder = new ChunkHolder(
                 new ChunkPos(chunkX, chunkZ), ChunkHolderManager.MAX_TICKET_LEVEL, world,
