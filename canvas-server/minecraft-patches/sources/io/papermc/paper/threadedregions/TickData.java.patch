--- a/io/papermc/paper/threadedregions/TickData.java
+++ b/io/papermc/paper/threadedregions/TickData.java
@@ -20,6 +_,12 @@
     }
 
     public void addDataFrom(final TickRegionScheduler.TickTime time) {
+        // Canvas start - rewrite scheduler
+        if (!time.isTickExecution()) {
+            // TODO fix later
+            return;
+        }
+        // Canvas end
         final long start = time.tickStart();
 
         TickRegionScheduler.TickTime first;
@@ -174,7 +_,7 @@
             } else {
                 long totalTickTime = 0L;
                 long totalCpuTime = 0L;
-                for (int k = 0, len2 = collapsedData.size(); k < len2; ++k) {
+                for (int k = 0, len2 = toCollapse.size(); k < len2; ++k) { // Canvas - fix index bounds with rewritten scheduler
                     final TickRegionScheduler.TickTime time = toCollapse.get(k);
                     totalTickTime += time.tickLength();
                     totalCpuTime += time.supportCPUTime() ? time.tickCpuTime() : 0L;
